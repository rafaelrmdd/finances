<?xml version="1.0"?>
<doc>
    <assembly>
        <name>financesApi</name>
    </assembly>
    <members>
        <member name="T:backend.financesApi.Controllers.BudgetController">
            <summary>
            Controller responsible for managing budgets
            </summary>
        </member>
        <member name="M:backend.financesApi.Controllers.BudgetController.GetBudgetsAsync">
            <summary>
            Gets all available budgets
            </summary>
            <returns>A list of all budgets</returns>
            <response code="200">Returns the list of budgets successfully</response>
            <response code="204">Returns NoContent when the list of budgets is empty</response>
        </member>
        <member name="M:backend.financesApi.Controllers.BudgetController.GetBudgetsByIdAsync(System.Guid)">
            <summary>
            Gets a specific budget by ID
            </summary>
            <param name="id">The unique identifier of the budget</param>
            <returns>The requested budget data</returns>
            <response code="200">Returns the found budget</response>
            <response code="404">Returns NotFound when the budget is not found or validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.BudgetController.AddBudgetAsync(backend.financesApi.DTOs.AddBudgetDTO)">
            <summary>
            Adds a new budget
            </summary>
            <param name="addBudgetDTO">
            Data for the budget to be created
            <para> Parameter 'category' must be one of these: </para>
            <para>'entertainment', 'transportation', 'housing', 'food', 'education', 'shopping', 'other' </para>
            </param>
            <returns>The created budget data</returns>
            <response code="201">Returns Created when the budget is created successfully</response>
            <response code="400">Returns BadRequest when the provided data is invalid</response>
            <response code="404">Returns NotFound When a validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.BudgetController.EditBudgetAsync(backend.financesApi.DTOs.EditBudgetDTO)">
            <summary>
            Updates an existing budget
            </summary>
            <param name="editBudgetDTO">
            Updated budget data
            <para> Parameter 'category' must be one of these: </para>
            <para>'entertainment', 'transportation', 'housing', 'food', 'education', 'shopping', 'other' </para>
            </param>
            <returns>The updated budget data</returns>
            <response code="200">Budget updated successfully</response>
            <response code="400">Returns BadRequest when the provided data is invalid</response>
            <response code="404">Returns NotFound when the budget is not found or validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.BudgetController.RemoveBudgetAsync(System.Guid)">
            <summary>
            Removes a budget by ID
            </summary>
            <param name="id">The unique identifier of the budget to be removed</param>
            <returns>Confirmation of successful deletion</returns>
            <response code="200">Returns Ok when the budget is removed successfully</response>
            <response code="404">Returns NotFound When the budget is not found or validation error occurs</response>
        </member>
        <member name="T:backend.financesApi.Controllers.SavingController">
            <summary>
            Controller responsible for managing savings
            </summary>
        </member>
        <member name="M:backend.financesApi.Controllers.SavingController.GetSavingsAsync">
            <summary>
            Gets all available savings
            </summary>
            <returns>A list of all savings</returns>
            <response code="200">Returns the list of savings successfully</response>
            <response code="204">Returns NoContent when the list of savings is empty</response>
        </member>
        <member name="M:backend.financesApi.Controllers.SavingController.GetSavingsByIdAsync(System.Guid)">
            <summary>
            Gets a specific saving by ID
            </summary>
            <param name="id">The unique identifier of the saving</param>
            <returns>The requested saving data</returns>
            <response code="200">Returns the found saving</response>
            <response code="404">Returns NotFound when the saving is not found or validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.SavingController.AddsavingAsync(backend.financesApi.DTOs.AddSavingDTO)">
            <summary>
            Adds a new saving
            </summary>
            <param name="addsavingDTO">
            Data for the saving to be created
            <para> Parameter 'category' must be one of these: </para>
            <para>
            'emergency', 'vacation', 'housing', 'car', 'wedding', 'retirement', 'education',
            'business', 'investment', 'health', 'technology', 'other'
            </para>
            </param>
            public enum SavingsCategoriesEnum
            <returns>The created saving data</returns>
            <response code="201">saving created successfully</response>
            <response code="400">Returns BadRequest when the provided data is invalid</response>
            <response code="404">Returns NotFound when a validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.SavingController.EditsavingAsync(backend.financesApi.DTOs.EditSavingDTO)">
            <summary>
            Updates an existing saving
            </summary>
            <param name="editsavingDTO">
            Updated saving data
            <para> Parameter 'category' must be one of these: </para>
            <para>'entertainment', 'transportation', 'housing', 'food', 'education', 'shopping', 'other' </para>
            </param>
            <returns>The updated saving data</returns>
            <response code="200">saving updated successfully</response>
            <response code="400">Returns BadRequest when the provided data is invalid</response>
            <response code="404">Returns NotFound when the saving is not found or validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.SavingController.RemovesavingAsync(System.Guid)">
            <summary>
            Removes a saving by ID
            </summary>
            <param name="id">The unique identifier of the saving to be removed</param>
            <returns>Confirmation of successful deletion</returns>
            <response code="200">Returns Ok when the saving is removed successfully</response>
            <response code="404">Returns NotFound when the saving is not found or validation error occurs</response>
        </member>
        <member name="T:backend.financesApi.Controllers.TransactionController">
            <summary>
            Controller responsible for managing transactions
            </summary>
        </member>
        <member name="M:backend.financesApi.Controllers.TransactionController.GetTransactionsAsync">
            <summary>
            Gets all available transactions
            </summary>
            <returns>A list of all transactions</returns>
            <response code="200">Returns the list of transactions successfully</response>
            <response code="204">Returns NoContent when the list of transactions is empty</response>
        </member>
        <member name="M:backend.financesApi.Controllers.TransactionController.GetTransactionsByIdAsync(System.Guid)">
            <summary>
            Gets a specific transaction by ID
            </summary>
            <param name="id">The unique identifier of the transaction</param>
            <returns>The requested transaction data</returns>
            <response code="200">Returns the found transaction</response>
            <response code="404">Returns NotFound when the transaction is not found or validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.TransactionController.AddTransactionAsync(backend.financesApi.DTOs.AddTransactionDTO)">
            <summary>
            Adds a new transaction
            </summary>
            <param name="addTransactionDTO">
            Data for the transaction to be created
            <para> Parameter 'category' must be one of these: </para>
            <para>'entertainment', 'transportation', 'housing', 'food', 'education', 'shopping', 'other' </para>
            <para> Parameter 'type' must be one of these: </para>
            <para>'income', 'expense' </para>
            </param>
            <returns>The created transaction data</returns>
            <response code="201">Transaction created successfully</response>
            <response code="400">Returns BadRequest when the provided data is invalid</response>
            <response code="404">Returns NotFound when a validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.TransactionController.EditTransactionAsync(backend.financesApi.DTOs.EditTransactionDTO)">
            <summary>
            Updates an existing transaction
            </summary>
            <param name="editTransactionDTO">
            Updated transaction data
            <para> Parameter 'category' must be one of these: </para>
            <para>'entertainment', 'transportation', 'housing', 'food', 'education', 'shopping', 'other' </para>
            </param>
            <returns>The updated transaction data</returns>
            <response code="200">Transaction updated successfully</response>
            <response code="400">Returns BadRequest when the provided data is invalid</response>
            <response code="404">Returns NotFound when the transaction is not found or validation error occurs</response>
        </member>
        <member name="M:backend.financesApi.Controllers.TransactionController.RemoveTransactionAsync(System.Guid)">
            <summary>
            Removes a transaction by ID
            </summary>
            <param name="id">The unique identifier of the transaction to be removed</param>
            <returns>Confirmation of successful deletion</returns>
            <response code="200">Returns Ok when the transaction is removed successfully</response>
            <response code="404">Returns NotFound when the transaction is not found or validation error occurs</response>
        </member>
        <member name="T:financesApi.Migrations.InitialMigration">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.InitialMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.InitialMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.InitialMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.DbSetFixMigration">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.DbSetFixMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.DbSetFixMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.DbSetFixMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.AddRowUpdatedAtInTableTransactions">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddRowUpdatedAtInTableTransactions.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddRowUpdatedAtInTableTransactions.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddRowUpdatedAtInTableTransactions.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.ChangePropsTimestampAndUpdatedAtTypes">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.ChangePropsTimestampAndUpdatedAtTypes.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.ChangePropsTimestampAndUpdatedAtTypes.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.ChangePropsTimestampAndUpdatedAtTypes.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.AddNewColumnsTimestampAndUpdatedAtInTableTransactionItems">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewColumnsTimestampAndUpdatedAtInTableTransactionItems.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewColumnsTimestampAndUpdatedAtInTableTransactionItems.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewColumnsTimestampAndUpdatedAtInTableTransactionItems.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.AddNewTableBudgets">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewTableBudgets.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewTableBudgets.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewTableBudgets.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.AddNewRowsStartDateEndDateAndChangedRowValueToAmountInBudgetsTable">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewRowsStartDateEndDateAndChangedRowValueToAmountInBudgetsTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewRowsStartDateEndDateAndChangedRowValueToAmountInBudgetsTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewRowsStartDateEndDateAndChangedRowValueToAmountInBudgetsTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.AddRowCategoryInBudgetsTable">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddRowCategoryInBudgetsTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddRowCategoryInBudgetsTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddRowCategoryInBudgetsTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.AddNewTableSavings">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewTableSavings.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewTableSavings.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.AddNewTableSavings.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:financesApi.Migrations.ChangeRowNameFromAmountToTargetAmountInSavingsTable">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.ChangeRowNameFromAmountToTargetAmountInSavingsTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.ChangeRowNameFromAmountToTargetAmountInSavingsTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:financesApi.Migrations.ChangeRowNameFromAmountToTargetAmountInSavingsTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
